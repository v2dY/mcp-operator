name: Release Helm Chart
on:
  push:
    branches:
      - feature/optimize-image-building

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate version and image name
        id: version
        run: |
          VERSION="0.2.0-dev.$(date +%Y%m%d%H%M%S)"
          IMAGE_NAME=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"
          echo "Image name: $IMAGE_NAME"

      - name: Build Docker image
        run: make docker-build IMG=${{ steps.version.outputs.image_name }}:${{ steps.version.outputs.version }}
  
      - name: Push Docker image
        run: make docker-push IMG=${{ steps.version.outputs.image_name }}:${{ steps.version.outputs.version }}

      - name: Generate Helm chart
        run: |
          make build-installer
          go install github.com/arttor/helmify/cmd/helmify@latest
          cat dist/install.yaml | helmify helm

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Package and Push Helm Chart
        run: |
          # Update chart version
          sed -i "s/version: .*/version: ${{ steps.version.outputs.version }}/" helm/Chart.yaml
          sed -i "s/appVersion: .*/appVersion: ${{ steps.version.outputs.version }}/" helm/Chart.yaml
          
          # Package chart
          helm package helm/ --destination .
          
          # Push to OCI registry
          helm push *.tgz oci://$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/chart